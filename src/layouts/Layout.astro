---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import NavList from "../components/NavList.astro";

import { createTree } from "../utils/nav";

interface Props {
	title: string;
}

const { title } = Astro.props;

const blogEntries: CollectionEntry<"root">[] = await getCollection("root");

const tree = createTree(blogEntries);
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="flex h-screen">
		<nav
			class="min-w-48 max-w-80 border-r border-gray-200 resize-x overflow-hidden bg-gray-50"
			role="navigation"
			hx-preserve="true"
		>
			<NavList tree={tree} />
		</nav>
		<div id="content" class="flex-1">
			<slot />
		</div>
	</body>
</html>
<script is:inline>
	document.querySelectorAll("[data-collapsed]").forEach((listItem) => {
		const value = localStorage.getItem(listItem.id);
		if (value === "true") {
			listItem.setAttribute("data-collapsed", "true");
		}
	});
	const collapsibleElements = document.querySelectorAll("[data-collapsible]");
	let selectedElement = document.querySelector("[data-selected=true]");

	collapsibleElements.forEach((link) => {
		link.onclick = (e) => {
			if (selectedElement) {
				if (
					selectedElement.dataset.collapsible === "true" &&
					selectedElement === link
				) {
					const listItem = selectedElement.closest("li");
					if (listItem) {
						const value = listItem.getAttribute("data-collapsed") === "true";
						listItem.setAttribute("data-collapsed", String(!value));
						localStorage.setItem(listItem.id, String(!value));
					}
					return;
				}
				selectedElement.dataset.selected = "false";
			}
			link.dataset.selected = "true";
			selectedElement = link;
		};
	});
</script>
